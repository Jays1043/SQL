--EXISTS Y NO EXISTS
SELECT *
FROM EMPLOYEES E
WHERE NOT EXISTS (
    SELECT *
    FROM DEPARTMENTS D
    WHERE e.department_id = d.department_id
    );
    
-- CREAR VISTA    
CREATE VIEW VW_EMPLEADOS_ADMISTRACION AS
SELECT *
FROM EMPLOYEES E
WHERE E.SALARY >= 4000
AND EXISTS (
    SELECT *
    FROM DEPARTMENTS D
    where E.DEPARTMENT_ID = D.DEPARTMENT_ID
    AND D.DEPARTMENT_NAME = 'Administration'
);

SELECT * FROM VW_EMPLEADOS_ADMISTRACION;

--CREAR O REMPLAZAR LA VISTA
CREATE OR REPLACE VIEW VW_EMPLEADOS_ADMISTRACION AS
SELECT *
FROM EMPLOYEES E
WHERE E.SALARY >= 4000
AND EXISTS (
    SELECT *
    FROM DEPARTMENTS D
    where E.DEPARTMENT_ID = D.DEPARTMENT_ID
    AND D.DEPARTMENT_NAME IN ('Administration','Marketing')
);

--CREAR BACKUP DE UNA TABLA
CREATE TABLE EMPLOYEES_BK AS
SELECT * 
FROM EMPLOYEES;

SELECT * FROM EMPLOYEES_BK;

--CREAR UN PROCEDIMIENTO
CREATE OR REPLACE PROCEDURE PA_AUMENTO_SALARIO (pPORCENTAJE IN NUMBER) AS
BEGIN
    UPDATE EMPLOYEES_BK
        SET SALARY = SALARY + (SALARY * pporcentaje/100);
    COMMIT;
END;

EXECUTE PA_AUMENTO_SALARIO(20);

CREATE OR REPLACE FUNCTION
    F_CALCULAR_SALARIO (VALOR NUMBER)
    RETURN NUMBER
    IS
    BEGIN
        RETURN VALOR + VALOR * 0.10; 
    END;
    
SELECT SALARY, F_CALCULAR_SALARIO(SALARY)
FROM EMPLOYEES

/*Encontrar a todos los empleados
que no tienen ningún departamento asignado*/
EXISTS , NOT EXISTS
SELECT *
FROM EMPLOYEES
SELECT *
FROM DEPARTMENTS
SELECT *
FROM EMPLOYEES E
WHERE NOT EXISTS (
SELECT *
FROM DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
)
SELECT *
FROM EMPLOYEES E
WHERE EXISTS (
SELECT *
FROM DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
)
-- vista
CREATE OR REPLACE VIEW VW_EMPLEADOS_ADMINISTRACION AS
SELECT E.EMPLOYEE_ID, E.FIRST_NAME
FROM EMPLOYEES E
WHERE E.SALARY >= '4000'
AND EXISTS (
SELECT *
FROM DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
AND D.DEPARTMENT_NAME IN ('Administration','Marketing')
)
SELECT * FROM VW_EMPLEADOS_ADMINISTRACION
SELECT * FROM EMP_DETAILS_VIEW
CREATE TABLE EMPLOYEES_BK AS
SELECT *
FROM EMPLOYEES
SELECT * FROM EMPLOYEES_BK
--- procedimiento sin parametros
CREATE OR REPLACE PROCEDURE PA_AUMENTO_SALARIO AS
BEGIN
UPDATE EMPLOYEES_BK
SET SALARY = SALARY + (SALARY * 0.10);
COMMIT;
END;
SELECT SALARY, SALARY + (SALARY * 0.10), (SALARY *1.10)
FROM EMPLOYEES_BK
EXECUTE PA_AUMENTO_SALARIO;
-- procedimiento con parametros
CREATE OR REPLACE
PROCEDURE PA_AUMENTO_SALARIO
(pPorcentaje IN NUMBER) AS
BEGIN
UPDATE EMPLOYEES_BK
SET SALARY =
SALARY + (SALARY * pPorcentaje/100);
COMMIT;
END;
EXECUTE PA_AUMENTO_SALARIO(20);
CREATE OR REPLACE FUNCTION
F_CALCULA_SALARIO (VALOR NUMBER)
RETURN NUMBER
IS
BEGIN
RETURN VALOR + VALOR *0.10;
END;
SELECT SALARY, F_CALCULA_SALARIO(SALARY)
FROM EMPLOYEES

    